{
  "version": "0.2.0",
  "configurations": [
    {
      "type": "node",
      "request": "launch",
      "name": "Launch Program Local DB",
      "program": "${workspaceFolder}/dist/app",
      "args": ["-env", "local", ],
      "sourceMaps": true,
      "outFiles": [
        "${workspaceRoot}/dist", 
        "${workspaceRoot}/dist/src", 
        "${workspaceRoot}/dist/tests"],
      "env": { 
      }
    },

    {
      "type": "node",
      "request": "launch",
      "name": "Launch Program with Mock",
      "program": "${workspaceFolder}/dist/src/app",
      "args": [ 
        "mock", 
        "-env", "local", 
        "-appname", "TSSampleApp"
      ],
      "sourceMaps": true,
      "outFiles": [
        "${workspaceRoot}/dist/**/*.js", 
        "${workspaceRoot}/dist/tests"
      ],
      "runtimeExecutable": "${env:HOME}/.nvm/versions/node/v12.16.1/bin/node"
    },

    {
      "request": "launch",
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Unit Tests No Mocks",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceFolder}/node_modules/.bin/_mocha",
			// Automatically stop program after launch.
			"stopOnEntry": false,
			// Command line arguments passed to the program.
      // --exit is a mocha option that tells it to exit the app after running the tests
			"args": ["--require", "ts-node/register", "--exit", "-env", "local", "dist/test/*.test.js"],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": "${workspaceFolder}",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Environment variables passed to the program.
			"env": { "NODE_ENV": "local"}
    },

    {
      "request": "launch",
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "Unit Tests with Mocks",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceFolder}/node_modules/.bin/_mocha",
			// Automatically stop program after launch.
			"stopOnEntry": false,
      // Command line arguments passed to the program.
      // --exit is a mocha option that tells it to exit the app after running the tests
			"args": ["--require", "ts-node/register", "--exit", "-env", "local", "mock", "dist/test/*.test.js"],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": "${workspaceFolder}",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Environment variables passed to the program.
			"env": { "NODE_ENV": "local"}
    },

    {
      "request": "launch",
			// Name of configuration; appears in the launch configuration drop down menu.
			"name": "CI Unit Tests",
			// Type of configuration. Possible values: "node", "mono".
			"type": "node",
			// Workspace relative or absolute path to the program.
			"program": "${workspaceFolder}/node_modules/.bin/_mocha",
			// Automatically stop program after launch.
			"stopOnEntry": false,
      // Command line arguments passed to the program.
      // --exit is a mocha option that tells it to exit the app after running the tests
			"args": ["--require", "ts-node/register", "--exit", "-env", "ci", "dist/test/*.test.js"],
			// Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.
			"cwd": "${workspaceFolder}",
			// Workspace relative or absolute path to the runtime executable to be used. Default is the runtime executable on the PATH.
			"runtimeExecutable": null,
			// Environment variables passed to the program.
			"env": { "NODE_ENV": "local"}
    },
    
    {
      "name": "Attach to Docker",
      "type": "node",
      "request": "attach",
      "protocol": "inspector",
      "port": 5858,
      "address": "localhost",
      "restart": false,
      "sourceMaps": false,
      "outFiles": [],
      "localRoot": "${workspaceRoot}/",
      "remoteRoot": "/usr/local/src/app/"
    }
  ]
}